[
    {
        "classname": "PCA",
        "module": "vaex.ml.transformations",
        "snake_name": "pca",
        "traits": [
            {
                "default": null,
                "has_default": true,
                "help": "The eigen values that correspond to each feature.",
                "name": "eigen_values_",
                "type": "List"
            },
            {
                "default": null,
                "has_default": true,
                "help": "The eigen vectors corresponding to each feature",
                "name": "eigen_vectors_",
                "type": "List"
            },
            {
                "default": null,
                "has_default": true,
                "help": "List of features to transform.",
                "name": "features",
                "type": "List"
            },
            {
                "default": null,
                "has_default": true,
                "help": "The mean of each feature",
                "name": "means_",
                "type": "List"
            },
            {
                "default": 0,
                "has_default": false,
                "help": "Number of components to retain. If None, all the components will be retained.",
                "name": "n_components",
                "type": "Int"
            },
            {
                "default": "PCA_",
                "has_default": false,
                "help": "Prefix for the names of the transformed features.",
                "name": "prefix",
                "type": "Unicode"
            },
            {
                "default": false,
                "has_default": false,
                "help": "If True, display a progressbar of the PCA fitting process.",
                "name": "progress",
                "type": "CBool"
            }
        ],
        "version": "1.0.0"
    },
    {
        "classname": "LabelEncoder",
        "module": "vaex.ml.transformations",
        "snake_name": "label_encoder",
        "traits": [
            {
                "default": false,
                "has_default": false,
                "help": "If True, unseen values will be                                   encoded with -1, otherwise an error is raised",
                "name": "allow_unseen",
                "type": "Bool"
            },
            {
                "default": null,
                "has_default": true,
                "help": "List of features to transform.",
                "name": "features",
                "type": "List"
            },
            {
                "default": null,
                "has_default": true,
                "help": "The encoded labels of each feature.",
                "name": "labels_",
                "type": "Dict"
            },
            {
                "default": "label_encoded_",
                "has_default": false,
                "help": "Prefix for the names of the transformed features.",
                "name": "prefix",
                "type": "Unicode"
            }
        ],
        "version": "1.0.0"
    },
    {
        "classname": "OneHotEncoder",
        "module": "vaex.ml.transformations",
        "snake_name": "one_hot_encoder",
        "traits": [
            {
                "default": null,
                "has_default": true,
                "help": "List of features to transform.",
                "name": "features",
                "type": "List"
            },
            {
                "default": 1,
                "has_default": false,
                "help": "Value to encode when a category is present.",
                "name": "one",
                "type": "Any"
            },
            {
                "default": "",
                "has_default": false,
                "help": "Prefix for the names of the transformed features.",
                "name": "prefix",
                "type": "Unicode"
            },
            {
                "default": null,
                "has_default": true,
                "help": "The unique elements found in each feature.",
                "name": "uniques_",
                "type": "List"
            },
            {
                "default": 0,
                "has_default": false,
                "help": "Value to encode when category is absent.",
                "name": "zero",
                "type": "Any"
            }
        ],
        "version": "1.0.0"
    },
    {
        "classname": "FrequencyEncoder",
        "module": "vaex.ml.transformations",
        "snake_name": "frequency_encoder",
        "traits": [
            {
                "default": null,
                "has_default": true,
                "help": "List of features to transform.",
                "name": "features",
                "type": "List"
            },
            {
                "default": null,
                "has_default": true,
                "help": "",
                "name": "mappings_",
                "type": "Dict"
            },
            {
                "default": "frequency_encoded_",
                "has_default": false,
                "help": "Prefix for the names of the transformed features.",
                "name": "prefix",
                "type": "Unicode"
            },
            {
                "default": "nan",
                "has_default": false,
                "help": "Strategy to deal with unseen values.",
                "name": "unseen",
                "type": "Enum"
            }
        ],
        "version": "1.0.0"
    },
    {
        "classname": "StandardScaler",
        "module": "vaex.ml.transformations",
        "snake_name": "standard_scaler",
        "traits": [
            {
                "default": null,
                "has_default": true,
                "help": "List of features to transform.",
                "name": "features",
                "type": "List"
            },
            {
                "default": null,
                "has_default": true,
                "help": "The mean of each feature",
                "name": "mean_",
                "type": "List"
            },
            {
                "default": "standard_scaled_",
                "has_default": false,
                "help": "Prefix for the names of the transformed features.",
                "name": "prefix",
                "type": "Unicode"
            },
            {
                "default": null,
                "has_default": true,
                "help": "The standard deviation of each feature.",
                "name": "std_",
                "type": "List"
            },
            {
                "default": true,
                "has_default": false,
                "help": "If True, remove the mean from each feature.",
                "name": "with_mean",
                "type": "CBool"
            },
            {
                "default": true,
                "has_default": false,
                "help": "If True, scale each feature to unit variance.",
                "name": "with_std",
                "type": "CBool"
            }
        ],
        "version": "1.0.0"
    },
    {
        "classname": "MinMaxScaler",
        "module": "vaex.ml.transformations",
        "snake_name": "minmax_scaler",
        "traits": [
            {
                "default": null,
                "has_default": true,
                "help": "The range the features are scaled to.",
                "name": "feature_range",
                "type": "Tuple"
            },
            {
                "default": null,
                "has_default": true,
                "help": "List of features to transform.",
                "name": "features",
                "type": "List"
            },
            {
                "default": null,
                "has_default": true,
                "help": "The minimum value of a feature.",
                "name": "fmax_",
                "type": "List"
            },
            {
                "default": null,
                "has_default": true,
                "help": "The maximum value of a feature.",
                "name": "fmin_",
                "type": "List"
            },
            {
                "default": "minmax_scaled_",
                "has_default": false,
                "help": "Prefix for the names of the transformed features.",
                "name": "prefix",
                "type": "Unicode"
            }
        ],
        "version": "1.0.0"
    },
    {
        "classname": "MaxAbsScaler",
        "module": "vaex.ml.transformations",
        "snake_name": "max_abs_scaler",
        "traits": [
            {
                "default": null,
                "has_default": true,
                "help": "Tha maximum absolute value of a feature.",
                "name": "absmax_",
                "type": "List"
            },
            {
                "default": null,
                "has_default": true,
                "help": "List of features to transform.",
                "name": "features",
                "type": "List"
            },
            {
                "default": "absmax_scaled_",
                "has_default": false,
                "help": "Prefix for the names of the transformed features.",
                "name": "prefix",
                "type": "Unicode"
            }
        ],
        "version": "1.0.0"
    },
    {
        "classname": "RobustScaler",
        "module": "vaex.ml.transformations",
        "snake_name": "robust_scaler",
        "traits": [
            {
                "default": null,
                "has_default": true,
                "help": "The median of each feature.",
                "name": "center_",
                "type": "List"
            },
            {
                "default": null,
                "has_default": true,
                "help": "List of features to transform.",
                "name": "features",
                "type": "List"
            },
            {
                "default": null,
                "has_default": true,
                "help": "The percentile range to which to scale each feature to.",
                "name": "percentile_range",
                "type": "Tuple"
            },
            {
                "default": "robust_scaled_",
                "has_default": false,
                "help": "Prefix for the names of the transformed features.",
                "name": "prefix",
                "type": "Unicode"
            },
            {
                "default": null,
                "has_default": true,
                "help": "The percentile range for each feature.",
                "name": "scale_",
                "type": "List"
            },
            {
                "default": true,
                "has_default": false,
                "help": "If True, remove the median.",
                "name": "with_centering",
                "type": "CBool"
            },
            {
                "default": true,
                "has_default": false,
                "help": "If True, scale each feature between the specified percentile range.",
                "name": "with_scaling",
                "type": "CBool"
            }
        ],
        "version": "1.0.0"
    },
    {
        "classname": "CycleTransformer",
        "module": "vaex.ml.transformations",
        "snake_name": "cycle_transformer",
        "traits": [
            {
                "default": null,
                "has_default": true,
                "help": "List of features to transform.",
                "name": "features",
                "type": "List"
            },
            {
                "default": 0,
                "has_default": false,
                "help": "The number of elements in one cycle.",
                "name": "n",
                "type": "CInt"
            },
            {
                "default": "",
                "has_default": false,
                "help": "Prefix for the x-component of the transformed features.",
                "name": "prefix_x",
                "type": "Unicode"
            },
            {
                "default": "",
                "has_default": false,
                "help": "Prefix for the y-component of the transformed features.",
                "name": "prefix_y",
                "type": "Unicode"
            },
            {
                "default": "_x",
                "has_default": false,
                "help": "Suffix for the x-component of the transformed features.",
                "name": "suffix_x",
                "type": "Unicode"
            },
            {
                "default": "_y",
                "has_default": false,
                "help": "Suffix for the y-component of the transformed features.",
                "name": "suffix_y",
                "type": "Unicode"
            }
        ],
        "version": "1.0.0"
    },
    {
        "classname": "BayesianTargetEncoder",
        "module": "vaex.ml.transformations",
        "snake_name": "bayesian_target_encoder",
        "traits": [
            {
                "default": null,
                "has_default": true,
                "help": "List of features to transform.",
                "name": "features",
                "type": "List"
            },
            {
                "default": null,
                "has_default": true,
                "help": "",
                "name": "mappings_",
                "type": "Dict"
            },
            {
                "default": "mean_encoded_",
                "has_default": false,
                "help": "Prefix for the names of the transformed features.",
                "name": "prefix",
                "type": "Unicode"
            },
            {
                "default": "",
                "has_default": false,
                "help": "The name of the column containing the target variable.",
                "name": "target",
                "type": "Unicode"
            },
            {
                "default": "nan",
                "has_default": false,
                "help": "Strategy to deal with unseen values.",
                "name": "unseen",
                "type": "Enum"
            },
            {
                "default": 100,
                "has_default": false,
                "help": "Weight to be applied to the mean encodings (smoothing parameter).",
                "name": "weight",
                "type": "CFloat"
            }
        ],
        "version": "1.0.0"
    },
    {
        "classname": "WeightOfEvidenceEncoder",
        "module": "vaex.ml.transformations",
        "snake_name": "weight_of_evidence_encoder",
        "traits": [
            {
                "default": 1e-06,
                "has_default": false,
                "help": "Small value taken as minimum fot the negatives, to avoid a division by zero",
                "name": "epsilon",
                "type": "Float"
            },
            {
                "default": null,
                "has_default": true,
                "help": "List of features to transform.",
                "name": "features",
                "type": "List"
            },
            {
                "default": null,
                "has_default": true,
                "help": "",
                "name": "mappings_",
                "type": "Dict"
            },
            {
                "default": "woe_encoded_",
                "has_default": false,
                "help": "Prefix for the names of the transformed features.",
                "name": "prefix",
                "type": "Unicode"
            },
            {
                "default": "",
                "has_default": false,
                "help": "The name of the column containing the target variable.",
                "name": "target",
                "type": "Unicode"
            },
            {
                "default": "nan",
                "has_default": false,
                "help": "Strategy to deal with unseen values.",
                "name": "unseen",
                "type": "Enum"
            }
        ],
        "version": "1.0.0"
    },
    {
        "classname": "GroupByTransformer",
        "module": "vaex.ml.transformations",
        "snake_name": "groupby_transformer",
        "traits": [
            {
                "default": null,
                "has_default": true,
                "help": "Dict where the keys are feature names and the values are vaex.agg objects.",
                "name": "agg",
                "type": "Dict"
            },
            {
                "default": "",
                "has_default": false,
                "help": "The feature on which to do the grouping.",
                "name": "by",
                "type": "Unicode"
            },
            {
                "default": null,
                "has_default": true,
                "help": "",
                "name": "df_group_",
                "type": "Instance"
            },
            {
                "default": null,
                "has_default": true,
                "help": "List of features to transform.",
                "name": "features",
                "type": "List"
            },
            {
                "default": "",
                "has_default": false,
                "help": "Prefix for the names of the aggregate features in case of a collision.",
                "name": "rprefix",
                "type": "Unicode"
            },
            {
                "default": "",
                "has_default": false,
                "help": "Suffix for the names of the aggregate features in case of a collision.",
                "name": "rsuffix",
                "type": "Unicode"
            }
        ],
        "version": "1.0.0"
    },
    {
        "classname": "Predictor",
        "module": "vaex.ml.sklearn",
        "snake_name": "sklearn_predictor",
        "traits": [
            {
                "default": null,
                "has_default": true,
                "help": "List of features to use.",
                "name": "features",
                "type": "List"
            },
            {
                "default": null,
                "has_default": false,
                "help": "A scikit-learn estimator.",
                "name": "model",
                "type": "Any"
            },
            {
                "default": "prediction",
                "has_default": false,
                "help": "The name of the virtual column housing the predictions.",
                "name": "prediction_name",
                "type": "Unicode"
            },
            {
                "default": "",
                "has_default": false,
                "help": "The name of the target column.",
                "name": "target",
                "type": "Unicode"
            }
        ],
        "version": "1.0.0"
    },
    {
        "classname": "SKLearnPredictor",
        "module": "vaex.ml.sklearn",
        "snake_name": "sk_learn_predictor",
        "traits": [
            {
                "default": null,
                "has_default": true,
                "help": "List of features to use.",
                "name": "features",
                "type": "List"
            },
            {
                "default": null,
                "has_default": false,
                "help": "A scikit-learn estimator.",
                "name": "model",
                "type": "Any"
            },
            {
                "default": "prediction",
                "has_default": false,
                "help": "The name of the virtual column housing the predictions.",
                "name": "prediction_name",
                "type": "Unicode"
            },
            {
                "default": "",
                "has_default": false,
                "help": "The name of the target column.",
                "name": "target",
                "type": "Unicode"
            }
        ],
        "version": "1.0.0"
    },
    {
        "classname": "IncrementalPredictor",
        "module": "vaex.ml.sklearn",
        "snake_name": "incremental_predictor",
        "traits": [
            {
                "default": 1000000,
                "has_default": false,
                "help": "Number of samples to be sent to the model in each batch.",
                "name": "batch_size",
                "type": "Int"
            },
            {
                "default": null,
                "has_default": true,
                "help": "List of features to use.",
                "name": "features",
                "type": "List"
            },
            {
                "default": null,
                "has_default": false,
                "help": "A scikit-learn estimator with a `.fit_predict` method.",
                "name": "model",
                "type": "Any"
            },
            {
                "default": 1,
                "has_default": false,
                "help": "Number of times each batch is sent to the model.",
                "name": "num_epochs",
                "type": "Int"
            },
            {
                "default": null,
                "has_default": true,
                "help": "A dictionary of key word arguments to be passed on to the `fit_predict` method of the `model`.",
                "name": "partial_fit_kwargs",
                "type": "Dict"
            },
            {
                "default": "prediction",
                "has_default": false,
                "help": "The name of the virtual column housing the predictions.",
                "name": "prediction_name",
                "type": "Unicode"
            },
            {
                "default": false,
                "has_default": false,
                "help": "If True, shuffle the samples before sending them to the model.",
                "name": "shuffle",
                "type": "Bool"
            },
            {
                "default": "",
                "has_default": false,
                "help": "The name of the target column.",
                "name": "target",
                "type": "Unicode"
            }
        ],
        "version": "1.0.0"
    },
    {
        "classname": "CatBoostModel",
        "module": "vaex.ml.catboost",
        "snake_name": "catboost_model",
        "traits": [
            {
                "default": null,
                "has_default": true,
                "help": "List of features to use when fitting the CatBoostModel.",
                "name": "features",
                "type": "List"
            },
            {
                "default": null,
                "has_default": false,
                "help": "Number of boosting iterations.",
                "name": "num_boost_round",
                "type": "CInt"
            },
            {
                "default": null,
                "has_default": true,
                "help": "A dictionary of parameters to be passed on to the CatBoostModel model.",
                "name": "params",
                "type": "Dict"
            },
            {
                "default": null,
                "has_default": true,
                "help": "A dictionary of parameters to be passed to the Pool data object construction",
                "name": "pool_params",
                "type": "Dict"
            },
            {
                "default": "catboost_prediction",
                "has_default": false,
                "help": "The name of the virtual column housing the predictions.",
                "name": "prediction_name",
                "type": "Unicode"
            },
            {
                "default": "Probability",
                "has_default": false,
                "help": "The form of the predictions. Can be \"RawFormulaVal\", \"Probability\" or \"Class\".",
                "name": "prediction_type",
                "type": "Enum"
            },
            {
                "default": "",
                "has_default": false,
                "help": "The name of the target column.",
                "name": "target",
                "type": "Unicode"
            }
        ],
        "version": "1.0.0"
    },
    {
        "classname": "LightGBMModel",
        "module": "vaex.ml.lightgbm",
        "snake_name": "lightgbm_model",
        "traits": [
            {
                "default": false,
                "has_default": false,
                "help": "Copy data or use the modified xgboost library for efficient transfer.",
                "name": "copy",
                "type": "Bool"
            },
            {
                "default": null,
                "has_default": true,
                "help": "List of features to use when fitting the LightGBMModel.",
                "name": "features",
                "type": "List"
            },
            {
                "default": 0,
                "has_default": false,
                "help": "Number of boosting iterations.",
                "name": "num_boost_round",
                "type": "CInt"
            },
            {
                "default": null,
                "has_default": true,
                "help": "parameters to be passed on the to the LightGBM model.",
                "name": "params",
                "type": "Dict"
            },
            {
                "default": "lightgbm_prediction",
                "has_default": false,
                "help": "The name of the virtual column housing the predictions.",
                "name": "prediction_name",
                "type": "Unicode"
            },
            {
                "default": "",
                "has_default": false,
                "help": "The name of the target column.",
                "name": "target",
                "type": "Unicode"
            }
        ],
        "version": "1.0.0"
    },
    {
        "classname": "XGBoostModel",
        "module": "vaex.ml.xgboost",
        "snake_name": "xgboost_model",
        "traits": [
            {
                "default": null,
                "has_default": true,
                "help": "List of features to use when fitting the XGBoostModel.",
                "name": "features",
                "type": "List"
            },
            {
                "default": 0,
                "has_default": false,
                "help": "Number of boosting iterations.",
                "name": "num_boost_round",
                "type": "CInt"
            },
            {
                "default": null,
                "has_default": true,
                "help": "A dictionary of parameters to be passed on to the XGBoost model.",
                "name": "params",
                "type": "Dict"
            },
            {
                "default": "xgboost_prediction",
                "has_default": false,
                "help": "The name of the virtual column housing the predictions.",
                "name": "prediction_name",
                "type": "Unicode"
            },
            {
                "default": "",
                "has_default": false,
                "help": "The name of the target column.",
                "name": "target",
                "type": "Unicode"
            }
        ],
        "version": "1.0.0"
    }
]